name: Build APIs Manually

on:
  workflow_dispatch:
    inputs:
      buildWeb:
        description: 'Build AHS.GC.Web?'
        required: true
        default: 'Yes'
        type: choice
        options:
          - Yes
          - No
      buildAuthPortal:
        description: 'Build AHS.GC.authorizationportal?'
        required: true
        default: 'Yes'
        type: choice
        options:
          - Yes
          - No
      buildConfigAPI:
        description: 'Build AHS.GC.ConfigAPI?'
        required: true
        default: 'Yes'
        type: choice
        options:
          - Yes
          - No
      buildSmartComm:
        description: 'Build AHS.GC.SmartComm?'
        required: true
        default: 'Yes'
        type: choice
        options:
          - Yes
          - No
      buildCloudAccount:
        description: 'Build Cloud Account API?'
        required: true
        default: 'Yes'
        type: choice
        options:
          - Yes
          - No
      buildCloudActivity:
        description: 'Build Cloud Activity API?'
        required: true
        default: 'Yes'
        type: choice
        options:
          - Yes
          - No
      buildCloudAdmin:
        description: 'Build Cloud Admin API?'
        required: true
        default: 'Yes'
        type: choice
        options:
          - Yes
          - No

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      # --- Build AHS.GC.Web ---
      - name: Build AHS.GC.Web
        if: ${{ github.event.inputs.buildWeb == 'Yes' }}
        shell: pwsh
        run: |
          $proj = Get-ChildItem "AHS.GC.Web" -Filter "*.csproj" -Recurse | Select-Object -First 1
          if (-not $proj) { Write-Error "No .csproj found in AHS.GC.Web"; exit 1 }
          dotnet restore $proj.FullName
          dotnet build $proj.FullName --configuration Release --no-restore

      # --- Build AHS.GC.authorizationportal ---
      - name: Build AHS.GC.authorizationportal
        if: ${{ github.event.inputs.buildAuthPortal == 'Yes' }}
        shell: pwsh
        run: |
          $proj = Get-ChildItem "AHS.GC.authorizationportal" -Filter "*.csproj" -Recurse | Select-Object -First 1
          if (-not $proj) { Write-Error "No .csproj found in AHS.GC.authorizationportal"; exit 1 }
          dotnet restore $proj.FullName
          dotnet build $proj.FullName --configuration Release --no-restore

      # --- Build AHS.GC.ConfigAPI ---
      - name: Build AHS.GC.ConfigAPI
        if: ${{ github.event.inputs.buildConfigAPI == 'Yes' }}
        shell: pwsh
        run: |
          $proj = Get-ChildItem "AHS.GC.ConfigAPI" -Filter "*.csproj" -Recurse | Select-Object -First 1
          if (-not $proj) { Write-Error "No .csproj found in AHS.GC.ConfigAPI"; exit 1 }
          dotnet restore $proj.FullName
          dotnet build $proj.FullName --configuration Release --no-restore

      # --- Build AHS.GC.SmartComm ---
      - name: Build AHS.GC.SmartComm
        if: ${{ github.event.inputs.buildSmartComm == 'Yes' }}
        shell: pwsh
        run: |
          $proj = Get-ChildItem "AHS.GC.SmartComm" -Filter "*.csproj" -Recurse | Select-Object -First 1
          if (-not $proj) { Write-Error "No .csproj found in AHS.GC.SmartComm"; exit 1 }
          dotnet restore $proj.FullName
          dotnet build $proj.FullName --configuration Release --no-restore

      # --- Build Cloud APIs ---
      - name: Build Cloud APIs
        shell: pwsh
        run: |
          $cloudBase = "AHS.GC.Cloud"
          $cloudAPIs = @(
              @{ Name="account"; Build="${{ github.event.inputs.buildCloudAccount }}" },
              @{ Name="activity"; Build="${{ github.event.inputs.buildCloudActivity }}" },
              @{ Name="admin"; Build="${{ github.event.inputs.buildCloudAdmin }}" }
          )
          $failedBuilds = @()

          foreach ($api in $cloudAPIs) {
              if ($api.Build -eq "Yes") {
                  $folder = Join-Path $cloudBase $api.Name
                  Write-Host "=== Building Cloud API: $($api.Name) ==="
                  $proj = Get-ChildItem $folder -Filter "*.csproj" -Recurse | Select-Object -First 1
                  if ($proj) {
                      dotnet restore $proj.FullName
                      if ($LASTEXITCODE -ne 0) { $failedBuilds += $api.Name; continue }
                      dotnet build $proj.FullName --configuration Release --no-restore
                      if ($LASTEXITCODE -ne 0) { $failedBuilds += $api.Name }
                  } else {
                      Write-Host "‚ùå No .csproj found in $($api.Name)"
                      $failedBuilds += $api.Name
                  }
              }
          }

          if ($failedBuilds.Count -gt 0) {
              Write-Error "Cloud build failed for: $($failedBuilds -join ', ')"
              exit 1
          }
