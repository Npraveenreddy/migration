name: Build APIs Manually

on:
  workflow_dispatch:
    inputs:
      apiFolder:
        description: 'API folder to build (or "all" to build everything)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - AHS.GC.Web
          - AHS.GC.authorizationportal
          - AHS.GC.ConfigAPI
          - AHS.GC.SmartComm
          - AHS.GC.Cloud
      cloudApi:
        description: 'Specific Cloud API to build (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - account
          - activity
          - admin
          - assessments
          - master
          - member

jobs:
  build-api:
    runs-on: windows-latest
    if: ${{ github.event.inputs.apiFolder != 'AHS.GC.Cloud' }}
    strategy:
      matrix:
        include:
          - api: AHS.GC.Web
          - api: AHS.GC.authorizationportal
          - api: AHS.GC.ConfigAPI
          - api: AHS.GC.SmartComm
    name: Build ${{ matrix.api }}
    steps:
      - name: Check if this API should be built
        id: should_build
        shell: pwsh
        run: |
          $input = '${{ github.event.inputs.apiFolder }}'
          $api = '${{ matrix.api }}'
          if ($input -eq 'all' -or $input -eq $api) {
            echo "::set-output name=build::true"
          } else {
            echo "::set-output name=build::false"
          }
      - name: Checkout code
        if: steps.should_build.outputs.build == 'true'
        uses: actions/checkout@v4

      - name: Setup .NET
        if: steps.should_build.outputs.build == 'true'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Build ${{ matrix.api }}
        if: steps.should_build.outputs.build == 'true'
        shell: pwsh
        run: |
          Write-Host "üîß Building ${{ matrix.api }}"
          $proj = Get-ChildItem "${{ matrix.api }}" -Filter "*.csproj" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
          if (-not $proj) { Write-Error "‚ùå No .csproj found in ${{ matrix.api }}"; exit 1 }
          dotnet restore $proj.FullName
          dotnet build $proj.FullName --configuration Release --no-restore

  build-cloud:
    runs-on: windows-latest
    if: ${{ github.event.inputs.apiFolder == 'AHS.GC.Cloud' || github.event.inputs.apiFolder == 'all' }}
    strategy:
      matrix:
        include:
          - subapi: account
          - subapi: activity
          - subapi: admin
          - subapi: assessments
          - subapi: master
          - subapi: member
    name: Build Cloud API ${{ matrix.subapi }}
    steps:
      - name: Check if this Cloud API should be built
        id: should_build
        shell: pwsh
        run: |
          $input = '${{ github.event.inputs.cloudApi }}'
          $subapi = '${{ matrix.subapi }}'
          if ($input -eq 'all' -or $input -eq $subapi) {
            echo "::set-output name=build::true"
          } else {
            echo "::set-output name=build::false"
          }

      - name: Checkout code
        if: steps.should_build.outputs.build == 'true'
        uses: actions/checkout@v4

      - name: Setup .NET
        if: steps.should_build.outputs.build == 'true'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Build Cloud API ${{ matrix.subapi }}
        if: steps.should_build.outputs.build == 'true'
        shell: pwsh
        run: |
          $folder = "AHS.GC.Cloud\\${{ matrix.subapi }}"
          Write-Host "üîß Building Cloud API: $folder"
          $proj = Get-ChildItem $folder -Filter "*.csproj" -Recurse -ErrorAction SilentlyContinue | Select-Object -First 1
          if (-not $proj) { Write-Error "‚ùå No .csproj found in $folder"; exit 1 }
          dotnet restore $proj.FullName
          dotnet build $proj.FullName --configuration Release --no-restore
