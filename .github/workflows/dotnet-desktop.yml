name: Build APIs Manually

on:
  workflow_dispatch:
    inputs:
      apiFolder:
        description: 'API folder to build (or "all" to build everything)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - AHS.GC.Web
          - AHS.GC.authorizationportal
          - AHS.GC.ConfigAPI
          - AHS.GC.SmartComm
          - AHS.GC.Cloud
      cloudApi:
        description: 'Specific Cloud API to build (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - account
          - activity
          - admin
          - assessments
          - master
          - member

jobs:
  release:
    runs-on: windows-latest
    env:
      DOTNET_ROOT: C:\Program Files\dotnet
      RELEASE_REPO: Npraveenreddy/artifacts
      RELEASE_TAG: v8.17.2025.08_RC1  # üëà Your manually created release tag

    steps:
    - name: üì¶ Checkout code
      uses: actions/checkout@v3

    - name: üõ†Ô∏è Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: üîß Build and Upload Selected APIs
      shell: pwsh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $apiFolder = "${{ github.event.inputs.apiFolder }}"
        $cloudApi = "${{ github.event.inputs.cloudApi }}"
        $workspace = $env:GITHUB_WORKSPACE

        $topLevelApis = @(
          "AHS.GC.Web",
          "AHS.GC.authorizationportal",
          "AHS.GC.ConfigAPI",
          "AHS.GC.SmartComm",
          "AHS.GC.Cloud"
        )

        $cloudSubApis = @(
          "account",
          "activity",
          "admin",
          "assessments",
          "master",
          "member"
        )

        function BuildAndUpload($path, $name) {
          Write-Host "üî® Building $name"
          dotnet build "$path/$name.csproj" -c Release

          $zipName = "$name.zip"
          $zipPath = "$workspace\$zipName"

          Write-Host "üì¶ Creating ZIP: $zipName"
          Compress-Archive -Path "$path/**/bin/Release/*" -DestinationPath $zipPath

          if (Test-Path $zipPath) {
            Write-Host "üì§ Uploading $zipName to release $env:RELEASE_TAG"
            gh release upload $env:RELEASE_TAG $zipPath --repo $env:RELEASE_REPO --clobber
          } else {
            Write-Error "‚ùå ZIP not found for $name"
            exit 1
          }
        }

        if ($apiFolder -eq "all") {
          foreach ($api in $topLevelApis) {
            if ($api -eq "AHS.GC.Cloud") {
              foreach ($sub in $cloudSubApis) {
                BuildAndUpload "$api/$sub" "$sub"
              }
            } else {
              BuildAndUpload $api $api
            }
          }
        } elseif ($apiFolder -eq "AHS.GC.Cloud") {
          if ($cloudApi -eq "all") {
            foreach ($sub in $cloudSubApis) {
              BuildAndUpload "$apiFolder/$sub" "$sub"
            }
          } else {
            BuildAndUpload "$apiFolder/$cloudApi" "$cloudApi"
          }
        } else {
          BuildAndUpload $apiFolder $apiFolder
        }
