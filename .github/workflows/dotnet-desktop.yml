name: Build and Release APIs

on:
  workflow_dispatch:
    inputs:
      apiFolder:
        description: 'Top-level API folder to build (or "all")'
        required: true
        default: 'AHS.GC.Web'
        type: choice
        options:
          - AHS.GC.Web
          - AHS.GC.Cloud
          - SmartComm
          - Config
          - Common
          - Integration
          - all
      cloudApi:
        description: 'Specific Cloud API to build (or "all")'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - account
          - user
          - notification
          - billing
          - reporting
          - analytics
          - all

jobs:
  build-and-release:
    runs-on: windows-latest

    env:
      RELEASE_TAG: v8.17.2025.08_RC1  # You can make this dynamic if needed

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v3

      - name: üõ†Ô∏è Build and Upload APIs
        shell: pwsh
        run: |
          $apiFolder = "${{ github.event.inputs.apiFolder }}"
          $cloudApi = "${{ github.event.inputs.cloudApi }}"
          $workspace = "$env:GITHUB_WORKSPACE"
          $releaseTag = $env:RELEASE_TAG

          # Detect all top-level folders
          $topLevelApis = Get-ChildItem $workspace -Directory | Select-Object -ExpandProperty Name

          # Detect sub-APIs in AHS.GC.Cloud
          $cloudSubApis = Get-ChildItem "$workspace\AHS.GC.Cloud" -Directory | Select-Object -ExpandProperty Name

          function BuildAndUpload($path, $name) {
              Write-Host "üìÅ Building: $path ($name)"
              $zipPath = "$workspace\$name.zip"
              Compress-Archive -Path "$workspace\$path\*" -DestinationPath $zipPath -Force
              Write-Host "üì¶ Created ZIP: $zipPath"
              gh release upload $releaseTag $zipPath --clobber
              Write-Host "üì§ Uploaded $name.zip to release $releaseTag"
          }

          # Build selected top-level folder (excluding AHS.GC.Cloud)
          if ($apiFolder -eq "all") {
              foreach ($folder in $topLevelApis) {
                  if ($folder -ne "AHS.GC.Cloud") {
                      BuildAndUpload $folder $folder
                  }
              }
          }
          elseif ($apiFolder -ne "AHS.GC.Cloud") {
              BuildAndUpload $apiFolder $apiFolder
          }

          # Build Cloud APIs if selected
          if ($apiFolder -eq "all" -or $apiFolder -eq "AHS.GC.Cloud" -or $cloudApi -ne "") {
              if ($cloudApi -eq "all") {
                  foreach ($sub in $cloudSubApis) {
                      BuildAndUpload "AHS.GC.Cloud\$sub" "$sub"
                  }
              }
              elseif ($cloudApi -ne "") {
                  BuildAndUpload "AHS.GC.Cloud\$cloudApi" "$cloudApi"
              }
          }
