name: Download and Deploy APIs to IIS

on:
  workflow_dispatch:
    inputs:
      apiFolder:
        description: "API folder to download (or 'all')"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - AHS.GC.Web
          - AHS.GC.authorizationportal
          - AHS.GC.ConfigAPI
          - AHS.GC.SmartComm
          - AHS.GC.Cloud
      cloudApi:
        description: "Specific Cloud API to download (or 'all')"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - account
          - activity
          - admin
          - assessments
          - master
          - member
          - payor

jobs:
  download:
    runs-on: self-hosted
    env:
      RELEASE_REPO: Npraveenreddy/artifacts
      RELEASE_TAG: v8.17.2025.08_RC1
      GH_TOKEN: ${{ secrets.ARTIFACTS_PAT }}

    steps:
      - name: Ensure artifacts folder exists
        shell: powershell
        run: |
          $artifactsPath = Join-Path $env:GITHUB_WORKSPACE "artifacts"
          if (-not (Test-Path $artifactsPath)) {
              New-Item -Path $artifactsPath -ItemType Directory | Out-Null
              Write-Host "Created artifacts folder."
          } else {
              Write-Host "Artifacts folder already exists - skipping creation."
          }

      - name: Download Artifacts
        shell: powershell
        run: |
          $apiFolder = "${{ github.event.inputs.apiFolder }}"
          $cloudApi  = "${{ github.event.inputs.cloudApi }}"
          $artifactsPath = Join-Path $env:GITHUB_WORKSPACE "artifacts"

          $topLevelApis = @(
            "AHS.GC.Web",
            "AHS.GC.authorizationportal",
            "AHS.GC.ConfigAPI",
            "AHS.GC.SmartComm",
            "AHS.GC.Cloud"
          )
          $cloudSubApis = @(
            "account",
            "activity",
            "admin",
            "assessments",
            "master",
            "member",
            "payor"
          )

          function Download-Zip($name) {
            $zipPath = Join-Path $artifactsPath "$name.zip"
            echo $env:GH_TOKEN | gh auth login --with-token
            gh release download $env:RELEASE_TAG `
              --repo $env:RELEASE_REPO `
              --pattern "$name.zip" `
              --dir $artifactsPath `
              --clobber
            if (Test-Path $zipPath) {
              Write-Host "Downloaded $name.zip"
            } else {
              Write-Error "Failed to download $name.zip"
              exit 1
            }
          }

          if ($apiFolder -eq "all") {
            foreach ($api in $topLevelApis) {
              if ($api -ne "AHS.GC.Cloud") {
                Download-Zip $api
              }
            }
          } elseif ($apiFolder -ne "AHS.GC.Cloud") {
            Download-Zip $apiFolder
          }

          if ($cloudApi -eq "all") {
            foreach ($sub in $cloudSubApis) {
              Download-Zip $sub
            }
          } elseif ($cloudSubApis -contains $cloudApi) {
            Download-Zip $cloudApi
          }

  deploy:
    runs-on: self-hosted
    needs: download
    steps:
      - name: Deploy Artifacts to IIS Paths
        shell: powershell
        run: |
          $artifactsDir = Join-Path $env:GITHUB_WORKSPACE "artifacts"

          $mapping = @{
            "AHS.GC.Web"                 = "C:\inetpub\wwwroot\Deployment\GITHUB\Portal"
            "AHS.GC.authorizationportal" = "C:\inetpub\wwwroot\Deployment\GITHUB\AuthorizationPortal"
            "AHS.GC.ConfigAPI"           = "C:\inetpub\wwwroot\Deployment\GITHUB\CONFIGAPI"
            "AHS.GC.SmartComm"           = "C:\inetpub\wwwroot\Deployment\GITHUB\SmartCommAPI"
            "account"                    = "C:\inetpub\wwwroot\Deployment\GITHUB\CloudAPI\Account"
            "activity"                   = "C:\inetpub\wwwroot\Deployment\GITHUB\CloudAPI\Activity"
            "admin"                      = "C:\inetpub\wwwroot\Deployment\GITHUB\CloudAPI\Admin"
            "assessments"                = "C:\inetpub\wwwroot\Deployment\GITHUB\CloudAPI\Assessment"
            "master"                     = "C:\inetpub\wwwroot\Deployment\GITHUB\CloudAPI\Master"
            "member"                     = "C:\inetpub\wwwroot\Deployment\GITHUB\CloudAPI\Member"
            "payor"                      = "C:\inetpub\wwwroot\Deployment\GITHUB\CloudAPI\Payor"
          }

          Get-ChildItem $artifactsDir -Filter *.zip | ForEach-Object {
            $name = $_.BaseName
            if ($mapping.ContainsKey($name)) {
              $target = $mapping[$name]
              if (-not (Test-Path $target)) {
                New-Item -Path $target -ItemType Directory -Force | Out-Null
              }
              Write-Host "Deploying $name.zip to $target ..."
              Expand-Archive -Path $_.FullName -DestinationPath $target -Force
              Remove-Item $_.FullName -Force
            } else {
              Write-Warning "No mapping defined for $name.zip - skipping."
            }
          }
