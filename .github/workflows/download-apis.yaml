name: Download and Deploy APIs to EC2

on:
  workflow_dispatch:
    inputs:
      apiFolder:
        description: 'API folder to download (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - AHS.GC.Web
          - AHS.GC.authorizationportal
          - AHS.GC.ConfigAPI
          - AHS.GC.SmartComm
          - AHS.GC.Cloud
      cloudApi:
        description: 'Specific Cloud API to download (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - account
          - activity
          - admin
          - assessments
          - master
          - member

jobs:
  download:
    runs-on: self-hosted
    env:
      RELEASE_REPO: Npraveenreddy/artifacts
      RELEASE_TAG: v8.17.2025.08_RC1
      GH_TOKEN: ${{ secrets.ARTIFACTS_PAT }}

    steps:
      - name: Create artifacts folder
        shell: powershell
        run: |
          $artifactsPath = "$env:GITHUB_WORKSPACE\artifacts"
          if (-not (Test-Path $artifactsPath)) {
            New-Item -Path $artifactsPath -ItemType Directory
          }

      - name: Download and Save Artifacts as ZIP
        shell: powershell
        run: |
          $apiFolder = "${{ github.event.inputs.apiFolder }}"
          $cloudApi = "${{ github.event.inputs.cloudApi }}"
          $workspace = "$env:GITHUB_WORKSPACE"
          $artifactsPath = "$workspace\artifacts"

          $topLevelApis = @(
            "AHS.GC.Web",
            "AHS.GC.authorizationportal",
            "AHS.GC.ConfigAPI",
            "AHS.GC.SmartComm",
            "AHS.GC.Cloud"
          )
          $cloudSubApis = @(
            "account",
            "activity",
            "admin",
            "assessments",
            "master",
            "member"
          )

          function DownloadZip($name) {
            $zipPath = "$artifactsPath\$name.zip"
            echo $env:GH_TOKEN | gh auth login --with-token
            gh release download $env:RELEASE_TAG `
              --repo $env:RELEASE_REPO `
              --pattern "$name.zip" `
              --dir $artifactsPath `
              --clobber

            if (Test-Path $zipPath) {
              Write-Host "Downloaded $name.zip"
            } else {
              Write-Error "Failed to download $name.zip"
              exit 1
            }
          }

          if ($apiFolder -eq "all") {
            foreach ($api in $topLevelApis) {
              if ($api -ne "AHS.GC.Cloud") {
                DownloadZip $api
              }
            }
          }
          elseif ($apiFolder -ne "AHS.GC.Cloud") {
            DownloadZip $apiFolder
          }

          if ($cloudApi -eq "all") {
            foreach ($sub in $cloudSubApis) {
              DownloadZip $sub
            }
          }
          elseif ($cloudSubApis -contains $cloudApi) {
            DownloadZip $cloudApi
          }

  deploy-to-ec2:
    runs-on: self-hosted
    needs: download
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      EC2_INSTANCE_ID: i-0409b449dd184132b

    steps:
      - name: Deploy ZIPs to EC2 and Extract
        shell: powershell
        run: |
          $apiFolder = "${{ github.event.inputs.apiFolder }}"
          $cloudApi = "${{ github.event.inputs.cloudApi }}"
          $artifactsPath = "C:\Devops\actions-runner\_work\migration\migration\artifacts"

          $topLevelApis = @(
            "AHS.GC.Web",
            "AHS.GC.authorizationportal",
            "AHS.GC.ConfigAPI",
            "AHS.GC.SmartComm"
          )
          $cloudSubApis = @(
            "account",
            "activity",
            "admin",
            "assessments",
            "master",
            "member"
          )

          $targetMap = @{
            "AHS.GC.Web"             = "Portal"
            "AHS.GC.authorizationportal" = "AuthorizationPortal"
            "AHS.GC.ConfigAPI"       = "CONFIGAPI"
            "AHS.GC.SmartComm"       = "SmartCommAPI"
            "account"                = "CloudAPI"
            "activity"               = "CloudAPI"
            "admin"                  = "CloudAPI"
            "assessments"            = "CloudAPI"
            "master"                 = "CloudAPI"
            "member"                 = "CloudAPI"
          }

          $selectedApis = @()

          if ($apiFolder -eq "all") {
            $selectedApis += $topLevelApis
          }
          elseif ($topLevelApis -contains $apiFolder) {
            $selectedApis += $apiFolder
          }

          if ($cloudApi -eq "all") {
            $selectedApis += $cloudSubApis
          }
          elseif ($cloudSubApis -contains $cloudApi) {
            $selectedApis += $cloudApi
          }

          foreach ($name in $selectedApis) {
            $zipPath = "$artifactsPath\$name.zip"
            if (-not (Test-Path $zipPath)) {
              Write-Host "Skipping $name â€” zip not found"
              continue
            }

            $remoteZipPath = "C:\temp\$name.zip"
            $extractPath = "C:\inetpub\wwwroot\Deployment\GITHUB\$($targetMap[$name])"

            $commands = @(
              "Copy-Item -Path `"$zipPath`" -Destination `"$remoteZipPath`" -Force",
              "Expand-Archive -Path `"$remoteZipPath`" -DestinationPath `"$extractPath`" -Force",
              "Remove-Item -Path `"$remoteZipPath`" -Force"
            )

            aws ssm send-command `
              --document-name "AWS-RunPowerShellScript" `
              --targets "Key=instanceIds,Values=$env:EC2_INSTANCE_ID" `
              --parameters @{ commands = $commands } `
              --region $env:AWS_REGION `
              --output text
          }
