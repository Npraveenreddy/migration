name: Download and Deploy APIs to EC2 (Self-Hosted)

on:
  workflow_dispatch:
    inputs:
      apiFolder:
        description: 'API folder to download (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - AHS.GC.Web
          - AHS.GC.authorizationportal
          - AHS.GC.ConfigAPI
          - AHS.GC.SmartComm
          - AHS.GC.Cloud
      cloudApi:
        description: 'Specific Cloud API to download (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - account
          - activity
          - admin
          - assessments
          - master
          - member

jobs:
  download:
    runs-on: self-hosted
    env:
      RELEASE_REPO: Npraveenreddy/artifacts
      RELEASE_TAG: v8.17.2025.08_RC1
      GH_TOKEN: ${{ secrets.ARTIFACTS_PAT }}

    steps:
      - name: Create artifacts folder
        run: mkdir -p artifacts

      - name: Download and Save Artifacts as ZIP
        run: |
          apiFolder="${{ github.event.inputs.apiFolder }}"
          cloudApi="${{ github.event.inputs.cloudApi }}"
          artifactsPath="$GITHUB_WORKSPACE/artifacts"

          topLevelApis=("AHS.GC.Web" "AHS.GC.authorizationportal" "AHS.GC.ConfigAPI" "AHS.GC.SmartComm" "AHS.GC.Cloud")
          cloudSubApis=("account" "activity" "admin" "assessments" "master" "member")

          download_zip() {
            local name="$1"
            echo "$GH_TOKEN" | gh auth login --with-token
            gh release download "$RELEASE_TAG" \
              --repo "$RELEASE_REPO" \
              --pattern "$name.zip" \
              --dir "$artifactsPath" \
              --clobber
            if [[ -f "$artifactsPath/$name.zip" ]]; then
              echo "‚úÖ Downloaded $name.zip"
            else
              echo "‚ùå Failed to download $name.zip"
              exit 1
            fi
          }

          if [[ "$apiFolder" == "all" ]]; then
            for api in "${topLevelApis[@]}"; do
              [[ "$api" != "AHS.GC.Cloud" ]] && download_zip "$api"
            done
          elif [[ "$apiFolder" != "AHS.GC.Cloud" ]]; then
            download_zip "$apiFolder"
          fi

          if [[ "$cloudApi" == "all" ]]; then
            for sub in "${cloudSubApis[@]}"; do
              download_zip "$sub"
            done
          elif [[ " ${cloudSubApis[*]} " == *" $cloudApi "* ]]; then
            download_zip "$cloudApi"
          fi

  deploy-to-ec2:
    runs-on: self-hosted
    needs: download
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      EC2_INSTANCE_ID: i-0409b449dd184132b

    steps:
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set default.region "$AWS_REGION"

      - name: Deploy ZIPs to EC2
        run: |
          apiFolder="${{ github.event.inputs.apiFolder }}"
          cloudApi="${{ github.event.inputs.cloudApi }}"
          artifactsPath="$GITHUB_WORKSPACE/artifacts"

          topLevelApis=("AHS.GC.Web" "AHS.GC.authorizationportal" "AHS.GC.ConfigAPI" "AHS.GC.SmartComm")
          cloudSubApis=("account" "activity" "admin" "assessments" "master" "member")

          declare -A targetMap=(
            ["AHS.GC.Web"]="Portal"
            ["AHS.GC.authorizationportal"]="AuthorizationPortal"
            ["AHS.GC.ConfigAPI"]="CONFIGAPI"
            ["AHS.GC.SmartComm"]="SmartCommAPI"
            ["account"]="CloudAPI"
            ["activity"]="CloudAPI"
            ["admin"]="CloudAPI"
            ["assessments"]="CloudAPI"
            ["master"]="CloudAPI"
            ["member"]="CloudAPI"
          )

          selectedApis=()
          if [[ "$apiFolder" == "all" ]]; then
            selectedApis+=("${topLevelApis[@]}")
          elif [[ " ${topLevelApis[*]} " == *" $apiFolder "* ]]; then
            selectedApis+=("$apiFolder")
          fi

          if [[ "$cloudApi" == "all" ]]; then
            selectedApis+=("${cloudSubApis[@]}")
          elif [[ " ${cloudSubApis[*]} " == *" $cloudApi "* ]]; then
            selectedApis+=("$cloudApi")
          fi

          for name in "${selectedApis[@]}"; do
            zipPath="$artifactsPath/$name.zip"
            if [[ ! -f "$zipPath" ]]; then
              echo "‚ö†Ô∏è Skipping $name ‚Äî zip not found"
              continue
            fi

            remoteZipPath="C:\\temp\\$name.zip"
            extractPath="C:\\inetpub\\wwwroot\\Deployment\\GITHUB\\${targetMap[$name]}"

            echo "üì¶ Deploying $name..."

            aws ssm send-command \
              --document-name "AWS-RunPowerShellScript" \
              --targets "Key=instanceIds,Values=$EC2_INSTANCE_ID" \
              --comment "Deploying $name" \
              --parameters "commands=[
                'Copy-Item -Path \"${zipPath//\//\\\\}\" -Destination \"$remoteZipPath\" -Force',
                'Expand-Archive -Path \"$remoteZipPath\" -DestinationPath \"$extractPath\" -Force',
                'Remove-Item -Path \"$remoteZipPath\" -Force'
              ]" \
              --region "$AWS_REGION"
          done
