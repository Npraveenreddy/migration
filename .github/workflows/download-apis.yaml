name: Download and Deploy APIs to IIS (Windows)

on:
  workflow_dispatch:
    inputs:
      apiFolder:
        description: 'API folder to deploy (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - AHS.GC.Web
          - AHS.GC.authorizationportal
          - AHS.GC.ConfigAPI
          - AHS.GC.SmartComm
          - AHS.GC.Cloud
          - SSISAPI
      cloudApi:
        description: 'Specific Cloud API to deploy (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - account
          - activity
          - admin
          - assessments
          - master
          - member
          - payor

jobs:
  deploy:
    runs-on: self-hosted   # Windows runner on the IIS machine
    env:
      RELEASE_REPO: Npraveenreddy/artifacts
      RELEASE_TAG: v8.17.2025.08_RC1
      GH_TOKEN: ${{ secrets.ARTIFACTS_PAT }}

    steps:
      - name: Ensure artifacts folder exists
        shell: pwsh
        run: |
          $artifactsPath = Join-Path $env:GITHUB_WORKSPACE "artifacts"
          if (-not (Test-Path $artifactsPath)) {
              New-Item -Path $artifactsPath -ItemType Directory | Out-Null
          }

      - name: Download Artifacts
        shell: pwsh
        run: |
          $apiFolder = "${{ github.event.inputs.apiFolder }}"
          $cloudApi  = "${{ github.event.inputs.cloudApi }}"
          $artifactsPath = Join-Path $env:GITHUB_WORKSPACE "artifacts"

          $topLevelApis = @(
            "AHS.GC.Web",
            "AHS.GC.authorizationportal",
            "AHS.GC.ConfigAPI",
            "AHS.GC.SmartComm",
            "AHS.GC.Cloud",
            "SSISAPI"
          )
          $cloudSubApis = @(
            "account",
            "activity",
            "admin",
            "assessments",
            "master",
            "member",
            "payor"
          )

          function Download-Zip($name) {
            $zipPath = Join-Path $artifactsPath "$name.zip"
            echo $env:GH_TOKEN | gh auth login --with-token
            gh release download $env:RELEASE_TAG `
              --repo $env:RELEASE_REPO `
              --pattern "$name.zip" `
              --dir $artifactsPath `
              --clobber
            if (Test-Path $zipPath) {
              Write-Host "Downloaded $name.zip"
            } else {
              Write-Error "Failed to download $name.zip"
              exit 1
            }
          }

          if ($apiFolder -eq "all") {
            foreach ($api in $topLevelApis) { Download-Zip $api }
          } elseif ($topLevelApis -contains $apiFolder) {
            Download-Zip $apiFolder
          }

          if ($cloudApi -eq "all") {
            foreach ($sub in $cloudSubApis) { Download-Zip $sub }
          } elseif ($cloudSubApis -contains $cloudApi) {
            Download-Zip $cloudApi
          }

      - name: Deploy to IIS Folders
        shell: pwsh
        run: |
          $artifactsDir = Join-Path $env:GITHUB_WORKSPACE "artifacts"
          $deployRoot = "C:\inetpub\wwwroot\Deployment\GITHUB"

          foreach ($zip in Get-ChildItem $artifactsDir -Filter *.zip) {
            $name = [System.IO.Path]::GetFileNameWithoutExtension($zip.Name).ToLower()

            switch ($name) {
              "ahs.gc.web"               { $target = Join-Path $deployRoot "Portal" }
              "ahs.gc.authorizationportal" { $target = Join-Path $deployRoot "AuthorizationPortal" }
              "ahs.gc.configapi"         { $target = Join-Path $deployRoot "CONFIGAPI" }
              "ahs.gc.smartcomm"         { $target = Join-Path $deployRoot "SmartCommAPI" }
              "ssisapi"                  { $target = Join-Path $deployRoot "SSISAPI" }
              "account"                  { $target = Join-Path $deployRoot "CloudAPI\Account" }
              "activity"                 { $target = Join-Path $deployRoot "CloudAPI\Activity" }
              "admin"                    { $target = Join-Path $deployRoot "CloudAPI\Admin" }
              "assessments"              { $target = Join-Path $deployRoot "CloudAPI\Assessment" }
              "master"                   { $target = Join-Path $deployRoot "CloudAPI\Master" }
              "member"                   { $target = Join-Path $deployRoot "CloudAPI\Member" }
              "payor"                    { $target = Join-Path $deployRoot "CloudAPI\Payor" }
              default                    { $target = Join-Path $deployRoot $name }
            }

            Write-Host "Deploying $name.zip to $target"
            if (-not (Test-Path $target)) { New-Item -Path $target -ItemType Directory | Out-Null }

            # Extract ZIP into target folder
            Expand-Archive -Path $zip.FullName -DestinationPath $target -Force
          }
