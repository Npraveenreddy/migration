name: Download and Deploy APIs to EC2 (PowerShell)

on:
  workflow_dispatch:
    inputs:
      apiFolder:
        description: 'API folder to download (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - AHS.GC.Web
          - AHS.GC.authorizationportal
          - AHS.GC.ConfigAPI
          - AHS.GC.SmartComm
          - AHS.GC.Cloud
      cloudApi:
        description: 'Specific Cloud API to download (or "all")'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - account
          - activity
          - admin
          - assessments
          - master
          - member

jobs:
  download:
    runs-on: self-hosted
    env:
      RELEASE_REPO: Npraveenreddy/artifacts
      RELEASE_TAG: v8.17.2025.08_RC1
      GH_TOKEN: ${{ secrets.ARTIFACTS_PAT }}

    steps:
      - name: Ensure artifacts folder exists
        shell: pwsh
        run: |
          $artifactsPath = Join-Path $env:GITHUB_WORKSPACE "artifacts"
          if (-not (Test-Path $artifactsPath)) {
              New-Item -Path $artifactsPath -ItemType Directory | Out-Null
              Write-Host "Created artifacts folder."
          } else {
              Write-Host "Artifacts folder already exists â€” skipping creation."
          }

      - name: Download Artifacts
        shell: pwsh
        run: |
          $apiFolder = "${{ github.event.inputs.apiFolder }}"
          $cloudApi  = "${{ github.event.inputs.cloudApi }}"
          $artifactsPath = Join-Path $env:GITHUB_WORKSPACE "artifacts"

          $topLevelApis = @(
            "AHS.GC.Web",
            "AHS.GC.authorizationportal",
            "AHS.GC.ConfigAPI",
            "AHS.GC.SmartComm",
            "AHS.GC.Cloud"
          )
          $cloudSubApis = @(
            "account",
            "activity",
            "admin",
            "assessments",
            "master",
            "member"
          )

          function Download-Zip($name) {
            $zipPath = Join-Path $artifactsPath "$name.zip"
            echo $env:GH_TOKEN | gh auth login --with-token
            gh release download $env:RELEASE_TAG `
              --repo $env:RELEASE_REPO `
              --pattern "$name.zip" `
              --dir $artifactsPath `
              --clobber
            if (Test-Path $zipPath) {
              Write-Host "Downloaded $name.zip"
            } else {
              Write-Error "Failed to download $name.zip"
              exit 1
            }
          }

          if ($apiFolder -eq "all") {
            foreach ($api in $topLevelApis) {
              if ($api -ne "AHS.GC.Cloud") {
                Download-Zip $api
              }
            }
          } elseif ($apiFolder -ne "AHS.GC.Cloud") {
            Download-Zip $apiFolder
          }

          if ($cloudApi -eq "all") {
            foreach ($sub in $cloudSubApis) {
              Download-Zip $sub
            }
          } elseif ($cloudSubApis -contains $cloudApi) {
            Download-Zip $cloudApi
          }

  deploy:
    runs-on: self-hosted
    needs: download
    env:
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

    steps:
      - name: Deploy to EC2 via SSH
        shell: pwsh
        run: |
          $artifactsDir = Join-Path $env:GITHUB_WORKSPACE "artifacts"
          $sshKeyFile = Join-Path $env:GITHUB_WORKSPACE "ssh_key.pem"

          # Save SSH key
          $env:SSH_KEY | Out-File -FilePath $sshKeyFile -Encoding ascii
          icacls $sshKeyFile /inheritance:r /grant:r "$($env:USERNAME):(R)"

          # Ensure /tmp exists on EC2
          cmd /c "ssh -i `"$sshKeyFile`" -o StrictHostKeyChecking=no $env:EC2_USER@$env:EC2_HOST mkdir -p /tmp"

          # Upload all ZIP files
          cmd /c "scp -i `"$sshKeyFile`" -o StrictHostKeyChecking=no `"$artifactsDir`\*.zip`" $env:EC2_USER@$env:EC2_HOST:/tmp/"

          # Extract & deploy
          $deployCmd = @"
          for zip in /tmp/*.zip; do
            name=\$(basename "\$zip" .zip)
            case "\$name" in
              "AHS.GC.Web") target="/var/www/Portal" ;;
              "AHS.GC.authorizationportal") target="/var/www/AuthorizationPortal" ;;
              "AHS.GC.ConfigAPI") target="/var/www/CONFIGAPI" ;;
              "AHS.GC.SmartComm") target="/var/www/SmartCommAPI" ;;
              "account"|"activity"|"admin"|"assessments"|"master"|"member") target="/var/www/CloudAPI" ;;
              *) target="/var/www/\$name" ;;
            esac
            mkdir -p "\$target"
            unzip -o "\$zip" -d "\$target"
            rm -f "\$zip"
          done
          "@

          cmd /c "ssh -i `"$sshKeyFile`" -o StrictHostKeyChecking=no $env:EC2_USER@$env:EC2_HOST bash -s" <<< $deployCmd
